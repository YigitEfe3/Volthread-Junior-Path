
    JMX

    - The JMX specification defines the architecture, design patterns, APIs, and services in the Java programming language
        for management and monitoring of applications and networks.

    - The JMX technology provides a simple, standard way of managing resources such as applications, devices, and services.

    - JMX technology is dynamic, you can use it to monitor and manage resources as they are created, installed and implemented.

    - You can use JMX to monitor and manage the Java VM.

    - The JMX technology enables Java applications to be managed without heavy investment.

    - The JMX technology provides a standard way to manage Java applications, systems, and networks.

    - The JMX technology can be used for out-of-the-box management of the Java VM.

    - The JMX technology provides a scalable, dynamic management architecture.

    - The JMX technology leverages existing standard Java technologies.

    - The JMX technology-based applications (JMX applications) can be created from a NetBeans IDE module.

    - The JMX technology integrates with existing management solutions and emerging technologies.

------------------------------------------------------------------------------------------------------------------------

    Architecture of the JMX Technology

    - The JMX technology can be divided into three levels:
        > Instrumentation
        > JMX agent
        > Remote management

------------------------------------------------------------------------------------------------------------------------

    MBeans

    - Fundamental concept of the JMX API, namely managed beans, or MBeans.

    - An MBean is a managed Java object, similar to a JavaBeans component,
        that follows the design patterns set forth in the JMX specification.

    - An MBean can represent a device, an application, or any resource that needs to be managed.

    - MBeans expose a management interface that consists of the following:
        > A set of readable or writable attributes, or both.
        > A set of invokable operations.
        > A self-description.

    - The JMX specification defines five types of MBean:
        > Standard MBeans : A standard MBean is defined by writing a Java interface called SomethingMBean and
                            a Java class called Something that implements that interface.
                            Every method in the interface defines either an attribute or an operation in the MBean.
        > Dynamic MBeans
        > Open MBeans
        > Model MBeans
        > MXBeans : An MXBean is a type of MBean that references only a predefined set of data types.
                    MXBeans provide a convenient way to bundle related values together,
                    without requiring clients to be specially configured to handle the bundles.

------------------------------------------------------------------------------------------------------------------------

    Remote Management

    - The JMX API enables you to perform remote management of your resources by using JMX technology-based connectors.

    - A JMX connector makes an MBean server accessible to remote Java technology-based clients.

    - A JMX connector consists of a connector client and a connector server.
        > A connector server is attached to an MBean server and listens for connection requests from clients.
        > A connector client is responsible for establishing a connection with the connector server.
















































